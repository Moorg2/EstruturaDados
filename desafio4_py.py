# -*- coding: utf-8 -*-
"""Desafio4.py

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1O6KDrwP474AaDLB4_FdnjxZG-6k1BWFr
"""

class Node:
    def __init__(self, nome , idade):
        self.nome = nome
        self.idade = idade
        self.next = None


class LinkedList:
    def __init__(self):
        self.head = None

    def append(self, nome, idade):
        new_node = Node(nome, idade)
        if self.head is None:
            self.head = new_node
        else:
            current = self.head
            while current.next is not None:
                current = current.next
            current.next = new_node

    def display(self):
        current = self.head
        while current is not None:
            print('Nome:', current.nome)
            print('Idade:', current.idade)
            print('')
            current = current.next

    def organizarIdade(self):
        if self.head is None:
            print("A lista está vazia")

        lista_organizada = self.head
        self.head = self.head.next
        lista_organizada.next = None
        while self.head is not None:
            current = self.head
            self.head = self.head.next
            current.next = None
            if current.idade < lista_organizada.idade:
                current.next = lista_organizada
                lista_organizada = current
            else:
                while lista_organizada.next is not None and current.idade >= lista_organizada.next.idade:
                    lista_organizada = lista_organizada.next
                current.next = lista_organizada.next
                lista_organizada.next = current
        self.head = lista_organizada

lista = LinkedList()
lista.append("João", 23)
lista.append("Gabriel", 17)
lista.append("Gabriel", 28)
lista.append("Lucas", 21)
lista.append("Lucas", 19)
lista.append("Adenilson", 19)
lista.append("Bruno", 20)
print("Lista original:")
lista.display()

lista.organizarIdade()

print("Lista organizada:")
lista.display()